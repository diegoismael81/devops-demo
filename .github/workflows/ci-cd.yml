name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - config-service
          - eureka-service
          - gateway-service
          - auth-service
          - message-service

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package -f ${{ matrix.service }}/pom.xml

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}
      
      - name: Build container image
        run: docker build -t ${{ secrets.REGISTRY_NAME }}/${{ matrix.service }}:latest -f ${{ matrix.service }}/Dockerfile ${{ matrix.service }}
        
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
      
      - name: Push image to DigitalOcean Container Registry
        run: docker push ${{ secrets.REGISTRY_NAME }}/${{ matrix.service }}:latest      

  test:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Run tests
        run: mvn test -f message-service/pom.xml

  deploy_config_service:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Update deployment file
        run: |
          sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/config-service:latest|' $GITHUB_WORKSPACE/k8s/config-service.yml
          
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}
      
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/config-service.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/config-service

  deploy_eureka_service:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy_config_service
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Update deployment file
        run: |
          sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/eureka-service:latest|' $GITHUB_WORKSPACE/k8s/eureka-service.yml
          
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}
      
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/eureka-service.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/eureka-service
  
  deploy_gateway_service:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest          
    needs: deploy_eureka_service
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Update deployment file
        run: |
          sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/gateway-service:latest|' $GITHUB_WORKSPACE/k8s/gateway-service.yml
          
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}
      
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/gateway-service.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/gateway-service

  deploy_services:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - auth-service
          - message-service
          
    needs: deploy_gateway_service
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Update deployment file
        run: |
          sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/${{ matrix.service }}:latest|' $GITHUB_WORKSPACE/k8s/${{ matrix.service }}.yml
          
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITAL_OCEAN_ACCESS_TOKEN }}
      
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/${{ matrix.service }}.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/${{ matrix.service }}
